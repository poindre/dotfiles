[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
let g:quickrun_config = {'*': {'split': '', 'hook/time/enable': '1'}}
set splitbelow
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup = 1
let g:indent_guides_exclude_filetypes = ['help', 'nerdtree']
'''

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'

[[plugins]]
repo = 'kana/vim-smartinput'

[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
" windowサイズを変更するsubmodeの設定
call submode#enter_with('bufmove', 'n', '', 's>', '<C-w>>')
call submode#enter_with('bufmove', 'n', '', 's<', '<C-w><')
call submode#enter_with('bufmove', 'n', '', 's+', '<C-w>+')
call submode#enter_with('bufmove', 'n', '', 's-', '<C-w>-')
call submode#map('bufmove', 'n', '', '>', '<C-w>>')
call submode#map('bufmove', 'n', '', '<', '<C-w><')
call submode#map('bufmove', 'n', '', '+', '<C-w>+')
call submode#map('bufmove', 'n', '', '-', '<C-w>-')
'''

[[plugins]]
repo='mbbill/undotree'
hook_add = '''
if has('persistent_undo')
  set undodir=~/.undodir
  set undofile
endif
let g:undotree_WindowLayout = 2         " undotreeは左側/diffは下にウィンドウ幅で表示
let g:undotree_ShortIndicators = 1      " 時間単位は短く表示
let g:undotree_SplitWidth = 30          " undotreeのウィンドウ幅
let g:undotree_SetFocusWhenToggle = 1   " undotreeを開いたらフォーカスする
let g:undotree_DiffpanelHeight = 8      " diffウィンドウの行数

nnoremap <Leader>u :UndotreeToggle<cr>
'''

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-operator-replace'
hook_add = '''
map R <Plug>(operator-replace)
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround'
rev = 'input_in_advance'
hook_add = '''
nmap sa <Plug>(operator-surround-append-input-in-advance)
nmap s( <Plug>(operator-surround-append-input-in-advance)(iw
nmap s{ <Plug>(operator-surround-append-input-in-advance){iw
nmap s[ <Plug>(operator-surround-append-input-in-advance)[iw
nmap s" <Plug>(operator-surround-append-input-in-advance)"iw
nmap s' <Plug>(operator-surround-append-input-in-advance)'iw
'''

[[plugins]]
repo = 'osyo-manga/vim-textobj-multiblock'
hook_add = '''
" nearest textobject
omap ab <Plug>(textobj-multiblock-a)
omap ib <Plug>(textobj-multiblock-i)
xmap ab <Plug>(textobj-multiblock-a)
xmap ib <Plug>(textobj-multiblock-i)
" delete nearest textobject
nmap <silent> sdd <Plug>(operator-surround-delete)<Plug>(textobj-multiblock-a)
" replace nearest textobject
nmap <silent> srr <Plug>(operator-surround-replace)<Plug>(textobj-multiblock-a)
'''

[[plugins]]
repo = 'osyo-manga/vim-textobj-blockwise'
